@using BlazorFocused
@using BlazorMusic.Client.Actions
@using BlazorMusic.Client.Models
@using BlazorMusic.Client.Reducers
@using BlazorMusic.Shared

@inject IStore<ArtistStore> store

@if (artist is not null)
{
    <h1>@artist.Name</h1>

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link @IsCurrentTab("Overview")" href="#" @onclick="@(() => ChangeTab("Overview"))">Overview</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @IsCurrentTab("Releases")" href="#" @onclick="@(() => ChangeTab("Releases"))">Releases</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @IsCurrentTab("Histogram")" href="#" @onclick="@(() => ChangeTab("Histogram"))">Histogram</a>
        </li>
    </ul>

    @switch(currentTab)
    {
        case "Overview":
            <ArtistOverview />
            break;
        case "Releases":
            <ArtistReleases />
            break;
        case "Histogram":
            <ArtistHistogram />
            break;
        default:
            break;
    }
}
else
{
    <h3>ArtistDetails</h3>

    <div class="">No artist has been selected</div>
}

@code {
    private Artist artist = null;
    private string currentTab = "Overview";

    protected override void OnInitialized()
    {
        store.Subscribe(store =>
        {
            artist = store.CurrentArtist;

            StateHasChanged();
        });
    }

    private string IsCurrentTab(string tabName) =>
        currentTab == tabName ? "active" : string.Empty;

    private void ChangeTab(string tabName)
    {
        currentTab = tabName;

        StateHasChanged();
    }
}
